// <auto-generated />
using System;
using JewelryAuctionApplicationDAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JewelryAuctionApplicationDAL.Migrations
{
    [DbContext(typeof(JewelryAuctionContext))]
    [Migration("20240719060153_fresh")]
    partial class fresh
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JewelryAuctionApplicationDAL.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(18)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("EmailAddress", true);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountId");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("JewelryAuctionApplicationDAL.Models.Auction", b =>
                {
                    b.Property<int>("AuctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuctionId"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("CurrentPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("JewelryId")
                        .HasColumnType("int");

                    b.HasKey("AuctionId");

                    b.HasIndex("AccountId");

                    b.HasIndex("JewelryId");

                    b.ToTable("Auction", (string)null);
                });

            modelBuilder.Entity("JewelryAuctionApplicationDAL.Models.Bid", b =>
                {
                    b.Property<int>("BidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BidId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("AuctionId")
                        .HasColumnType("int");

                    b.Property<decimal>("BidAmount")
                        .HasColumnType("decimal(18)");

                    b.Property<DateTime>("BidTime")
                        .HasColumnType("datetime2");

                    b.HasKey("BidId");

                    b.HasIndex("AccountId");

                    b.HasIndex("AuctionId");

                    b.ToTable("Bid", (string)null);
                });

            modelBuilder.Entity("JewelryAuctionApplicationDAL.Models.Jewelry", b =>
                {
                    b.Property<int>("JewelryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JewelryId"));

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("JewelryCategory")
                        .HasColumnType("int");

                    b.Property<string>("JewelryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("StartingPrice")
                        .HasColumnType("decimal(18)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("JewelryId");

                    b.ToTable("Jewelry", (string)null);
                });

            modelBuilder.Entity("JewelryAuctionApplicationDAL.Models.Auction", b =>
                {
                    b.HasOne("JewelryAuctionApplicationDAL.Models.Account", "Account")
                        .WithMany("Auctions")
                        .HasForeignKey("AccountId");

                    b.HasOne("JewelryAuctionApplicationDAL.Models.Jewelry", "Jewelry")
                        .WithMany("Auctions")
                        .HasForeignKey("JewelryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Jewelry");
                });

            modelBuilder.Entity("JewelryAuctionApplicationDAL.Models.Bid", b =>
                {
                    b.HasOne("JewelryAuctionApplicationDAL.Models.Account", "Account")
                        .WithMany("Bids")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JewelryAuctionApplicationDAL.Models.Auction", "Auction")
                        .WithMany("Bids")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Auction");
                });

            modelBuilder.Entity("JewelryAuctionApplicationDAL.Models.Account", b =>
                {
                    b.Navigation("Auctions");

                    b.Navigation("Bids");
                });

            modelBuilder.Entity("JewelryAuctionApplicationDAL.Models.Auction", b =>
                {
                    b.Navigation("Bids");
                });

            modelBuilder.Entity("JewelryAuctionApplicationDAL.Models.Jewelry", b =>
                {
                    b.Navigation("Auctions");
                });
#pragma warning restore 612, 618
        }
    }
}
